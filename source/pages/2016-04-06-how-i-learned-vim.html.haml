---
title: How I Learned Vim
date: 2016-04-06 14:20 UTC
tags:
---

%h1 How I Learned Vim
.div.right-align
  %small.js-reading-time

%blockquote
  %p "Sucking at something is the first step at being sorta good at something." - Jake the dog

%h2 To Live is To Suffer
%p
  Like electricity, we have the tendency to follow the path of least resistance. We prefer what’s easy, fast, and effortless. Don't get me wrong, the whole point of human technological advancement is to make our lives easier. But, if we <em>always</em> take the easy path, we would never improve as a person.

%p
  This is a story of how I took the difficult path and consequently became a (slightly) better developer by improving my tools.

= partial 'figure', :locals => {:src => 'easy-difficulty.jpg', :caption => "There's a baby inside each of us. (from Wolfenstein: The New Order)"}

%h2 Testing the Waters
%p
  One day, the company I work for decided to force all the developers to try on vim. I, among most of my co-workers, hated the idea. This just seemed unnecessary. Why leave the comfort of Sublime? Working in vim feels like having my two hands tied while somebody asks you to solve differential equations before he lets you write code. My work productivity was poor and it's dragging my sanity down with it.

%p
  Eventually, all my co-workers went back to using their previous editors. I wanted to follow suit but then I don’t want to tell anyone that I don’t use vim because I gave up trying. I want to at least be able to compare it with Sublime. And to do that, I need to be good at it. If there was some way…

%p
  Then, it came to me. From the breeding ground of ideas known as the shower, I had an idea. What if I make a game to ease me on to learning vim? Something I could play to learn and have fun with at the same time. And thus, Running Vim was born.

%h2 Running Vim
= partial 'figure', :locals => {:src => 'running-vim.png', :caption => 'I tried my best to make it look like the original.'}

%p
  (You can view the code
  = link_to 'here', '//github.com/aapomm/running-vim'
  \. Fork it!)

%p
  The second obstacle in learning vim, in my opinion, is learning the <em>directionals</em> (the first being the mode switching). H for left, J for down, K for up, and L for right makes no sense at first glance. But you will (as I did) realize that their placement in the home row is perfect because in vim, home is where the heart is. Mastering this is essential in learning vim, as this is your primary means for movement.

%p
  The lack of a mouse in vim makes traversing through paragraphs of words difficult and using just the directionals is not enough. This is where the <em>word movements</em> come in. With the power of W, E, and B, we can skip through words and then fix the flaws of the world. This skipping behavior is completely foreign to me. Fortunately, I could integrate this to the game.

%p
  With the desire to know those fundamentals, paired with my meager knowledge of javascript, I was able to make the game. Running Vim is an infinite runner where you (the cursor) navigate through the text using vim controls and avoiding the enemy (the red highlighted thing), with the goal of getting the highest score.

= partial 'figure', :locals => {:src => 'highscore.png', :caption => 'We can make our own rules in Mableland!'}

%h2 Playing to Learn
%p
  After I finished writing the game, I spent a few minutes of my free time at work to play. At each attempt, I tried my best to beat my previous high score. In time, my fingers started to feel at home (heh). The awkward sensation of my right index finger, switching from H to J, began to disappear. I also developed a good understanding of the uses of the word movements, effectively targeting words that need to be capitalized or pluralized. My progress was slow but constant. Like seeing a big, fat cloud appear from one place to another without actually seeing it move.

%p
  Ultimately, I became good at it. The editor developed into an extension of myself. It efficiently translates the rhythm of my fingers into code, as they tap into the keyboard. I finally had a good enough grasp of it to be able to compare it with my old editor. I was happy to have reached my goal!

= partial 'figure', :locals => {:src => 'hackerman.jpg', :caption => 'This is me. (from Kung Fury)'}

%h2 I Got So Far
%p
  In the end, I decided to stick to vim. The retro, hacker vibe of working in the terminal/console just seems cooler to me! But more importantly, I feel more productive with it since my hands never have to leave the keyboard. With its plugins aplenty and limitless configurations, I never went wrong with using vim.

%p
  The whole experience improved me as a person. I am now less restrictive to change and I now keep an open mind. I maintain a mindset that every technology, tool, or platform I use can be improved. If it’s good I can adapt it. I’m already excited for my next tool improvement!

.right-align
  .qed-box{:data => {:target => '#final-note'}}

%p#final-note.hidden
  Final note: I was rewarded for going the extra mile regardless of the pain and you should too! When working out, take that extra rep or two. Or, spend 30 minutes of your day to practice that skill you've always wanted to learn. Or learn a new language. Or read a book. Whatever productive thing it is, no matter how hard, do it! Your future self will thank you. I know I did.
